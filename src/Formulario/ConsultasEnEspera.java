
/*
 * ConsultasBoletas.java
 *
 * Created @author elaprendiz http://www.youtube.com/user/JleoD7
 */
package Formulario;

import static Formulario.CajaRegistradora.TipoPrecio;
import claseConectar.conectar;
import java.awt.HeadlessException;
import java.net.URL;
//import java.awt.Image;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.*;
//import javax.swing.Icon;
//import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Administrador
 */
public final class ConsultasEnEspera extends javax.swing.JInternalFrame {

    /** Creates new form ConsultasBoletas */
    public ConsultasEnEspera() {
        initComponents();
        cargartodasBoletas();
        calcular();
        jDateChooser1.setEnabled(false);
        setLocation(716, 10);
        //cargarImagen();
    }
    public static String tipoPrecio []=new String[100];
    public static int contador =0;
    public static boolean enespera =false;
    public static String codigo="";
    public void cargartodasBoletas()
    {
        DefaultTableModel tabla= new DefaultTableModel()
        {
             @Override
            public boolean isCellEditable(int row, int col)
            {
                return false;
            }
        };
        String []titulos={"NUMERO","COD.VENDEDOR","IMPORTE","DESCUENTO","EFECTIVO","FECHA","HORA","COD.CLI"};
        tabla.setColumnIdentifiers(titulos);
        this.tbboletas.setModel(tabla);
        String consulta= "select * from EsperaCajaRegistradora";
        String []Datos= new String [8];
        try {
            Statement st = cn.createStatement();
            ResultSet rs= st.executeQuery(consulta);
            while(rs.next())
            {
                Datos[0]=rs.getString("num_caj");
                Datos[1]=rs.getString("cod_ven");
                Datos[2]=rs.getString("pre_tot");
                Datos[3]=rs.getString("descuento");
                Datos[4]=rs.getString("efect_tot");
                Datos[5]=rs.getString("fecha");                
                Datos[6]=rs.getString("hora_boleta");
                Datos[7]=rs.getString("cod_cli");
                tabla.addRow(Datos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ConsultasEnEspera.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    /*void cargarImagen(){
      //  "/Imagenes/negocios.jpg"
        ImageIcon fot = new ImageIcon("/Imagenes/negocios.jpg");
        Icon icono = new ImageIcon(fot.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT));
        jLabel1.setIcon(icono);
        this.repaint();
    }*/
            

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        mnver = new javax.swing.JMenuItem();
        mnenviar = new javax.swing.JMenuItem();
        mneliminar = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbboletas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        rdbnnumero = new javax.swing.JRadioButton();
        rdbbnfecha = new javax.swing.JRadioButton();
        rdbntodos = new javax.swing.JRadioButton();
        txtnumero = new javax.swing.JTextField();
        btnbuscador = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        txtIngreso = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnImprimir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        txtEfectivo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtVuelto = new javax.swing.JTextField();

        mnver.setText("Ver Detalle");
        mnver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnverActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mnver);

        mnenviar.setText("Enviar");
        mnenviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnenviarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mnenviar);

        mneliminar.setText("Eliminar");
        mneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mneliminarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mneliminar);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("REGISTRO DE PRODUCTOS EN ESPERA");
        setMaximumSize(new java.awt.Dimension(613, 321));
        setMinimumSize(new java.awt.Dimension(613, 321));

        jPanel2.setBackground(new java.awt.Color(227, 255, 255));
        jPanel2.setToolTipText("");

        tbboletas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbboletas.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(tbboletas);

        jPanel1.setBackground(new java.awt.Color(227, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 153, 153), new java.awt.Color(0, 255, 255), new java.awt.Color(102, 0, 102), new java.awt.Color(153, 0, 153)));

        buttonGroup1.add(rdbnnumero);
        rdbnnumero.setSelected(true);
        rdbnnumero.setText("Mostrar  por NÂº:");
        rdbnnumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbnnumeroActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbbnfecha);
        rdbbnfecha.setText("Mostrar por Fecha");
        rdbbnfecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbbnfechaActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbntodos);
        rdbntodos.setText("Mostrar todas:");
        rdbntodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbntodosActionPerformed(evt);
            }
        });

        btnbuscador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        btnbuscador.setText("BUSCAR");
        btnbuscador.setBorder(null);
        btnbuscador.setBorderPainted(false);
        btnbuscador.setContentAreaFilled(false);
        btnbuscador.setHideActionText(true);
        btnbuscador.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnbuscador.setIconTextGap(2);
        btnbuscador.setInheritsPopupMenu(true);
        btnbuscador.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscarSelected.png"))); // NOI18N
        btnbuscador.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        btnbuscador.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnbuscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbntodos)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbbnfecha)
                            .addComponent(rdbnnumero))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtnumero)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnbuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnbuscador)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdbnnumero))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbbnfecha)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdbntodos)
                        .addGap(18, 18, 18))))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 153, 153), new java.awt.Color(0, 204, 255), new java.awt.Color(102, 0, 102), new java.awt.Color(204, 0, 204)));

        txtIngreso.setEditable(false);
        txtIngreso.setBackground(new java.awt.Color(51, 255, 204));
        txtIngreso.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtIngreso.setForeground(new java.awt.Color(51, 0, 51));

        jLabel4.setFont(new java.awt.Font("Thonburi", 1, 14)); // NOI18N
        jLabel4.setText("Total a pagar :   S/.");

        btnImprimir.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Imprimir.png"))); // NOI18N
        btnImprimir.setText("Imprimir ");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/contenido (1)++.png"))); // NOI18N
        jButton1.setText("Reporte");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/contenido.png"))); // NOI18N
        jButton1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/contenidoPresed.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Thonburi", 1, 14)); // NOI18N
        jLabel5.setText("T. Desc     :         S/.");

        txtDesc.setEditable(false);
        txtDesc.setBackground(new java.awt.Color(51, 255, 204));
        txtDesc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtDesc.setForeground(new java.awt.Color(51, 0, 51));

        txtEfectivo.setEditable(false);
        txtEfectivo.setBackground(new java.awt.Color(51, 255, 204));
        txtEfectivo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtEfectivo.setForeground(new java.awt.Color(51, 0, 51));

        jLabel6.setFont(new java.awt.Font("Thonburi", 1, 14)); // NOI18N
        jLabel6.setText("T.Efectivo :         S/.");

        jLabel7.setFont(new java.awt.Font("Thonburi", 1, 14)); // NOI18N
        jLabel7.setText("T.Vuelto    :         S/.");

        txtVuelto.setEditable(false);
        txtVuelto.setBackground(new java.awt.Color(51, 255, 204));
        txtVuelto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtVuelto.setForeground(new java.awt.Color(51, 0, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(206, 206, 206)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtVuelto, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEfectivo)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVuelto)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDesc)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIngreso)
                            .addComponent(jLabel4))
                        .addGap(17, 17, 17))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnImprimir)
                        .addGap(23, 23, 23))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void rdbnnumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbnnumeroActionPerformed
// TODO add your handling code here:
    if(rdbnnumero.isSelected()==true)
    {
        txtnumero.setEnabled(true);
        txtnumero.requestFocus();
        jDateChooser1.setEnabled(false);
        jDateChooser1.setDate(null);  
    }
}//GEN-LAST:event_rdbnnumeroActionPerformed

private void rdbbnfechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbbnfechaActionPerformed
// TODO add your handling code here:
    if(rdbbnfecha.isSelected()==true)
    {
        jDateChooser1.setEnabled(true);
        txtnumero.setEnabled(false);
        txtnumero.setText("");    
    }
}//GEN-LAST:event_rdbbnfechaActionPerformed

private void rdbntodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbntodosActionPerformed
// TODO add your handling code here:
    if(rdbntodos.isSelected()==true)
    {
        jDateChooser1.setEnabled(false);
        jDateChooser1.setDate(null);
        txtnumero.setText("");
        txtnumero.setEnabled(false);
        cargartodasBoletas();
        calcular();
    } 
}//GEN-LAST:event_rdbntodosActionPerformed

private void btnbuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscadorActionPerformed
// TODO add your handling code here: 
    String num=txtnumero.getText();
    String consulta="";
    if(rdbnnumero.isSelected()==true)
    {
        consulta= "SELECT * FROM EsperaCajaRegistradora WHERE num_caj like '%"+num+"%'";
    }
    if(rdbbnfecha.isSelected()==true)
    {
        Date fecha=jDateChooser1.getDate();
    SimpleDateFormat formatofecha= new SimpleDateFormat("dd/MM/YYYY");
    String fec=""+formatofecha.format(fecha);
    consulta= "SELECT * FROM EsperaCajaRegistradora WHERE fecha='"+fec+"'";
    }
    if(rdbntodos.isSelected()==true)
    {
        consulta= "SELECT * FROM EsperaCajaRegistradora ";
    }
        DefaultTableModel tabla= new DefaultTableModel();
        String []titulos={"NUMERO","COD.VENDEDOR","IMPORTE","DESCUENTO","EFECTIVO","FECHA","HORA","COD.CLI"};
        tabla.setColumnIdentifiers(titulos);
        tbboletas.setModel(tabla);
        String []Datos= new String [8];
        try {
            Statement st = cn.createStatement();
            ResultSet rs= st.executeQuery(consulta);
            while(rs.next())
            {
                Datos[0]=rs.getString("num_caj");
                Datos[1]=rs.getString("cod_ven");
                Datos[2]=rs.getString("pre_tot");
                Datos[3]=rs.getString("descuento");
                Datos[4]=rs.getString("efect_tot");
                Datos[5]=rs.getString("fecha");                
                Datos[6]=rs.getString("hora_boleta");
                Datos[7]=rs.getString("cod_cli");
                tabla.addRow(Datos);
            }
           calcular();
        } catch (SQLException ex) {
            Logger.getLogger(ConsultasEnEspera.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}//GEN-LAST:event_btnbuscadorActionPerformed

private void mnverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnverActionPerformed
// TODO add your handling code here:
    int filasele= tbboletas.getSelectedRow();
    if(filasele==-1)
    {
        JOptionPane.showMessageDialog(null, "No Seleciono ninguna fila");
    }
    else
    {
           DetalleEnEspera detalle = new DetalleEnEspera();
    Principal.jdpescritorio.add(detalle);
    detalle.toFront();
    detalle.setVisible(true);
    Double vuelto=0.0;
        String numbol=tbboletas.getValueAt(filasele, 0).toString();
        String codcli="";
        try {
            codcli=tbboletas.getValueAt(filasele, 7).toString(); 
        } catch (Exception e) {
            codcli="";
        }    
        String total=tbboletas.getValueAt(filasele, 2).toString();
        String fecha=tbboletas.getValueAt(filasele, 5).toString();
        String efect="0.0";
        try {
            efect=tbboletas.getValueAt(filasele, 4).toString();
            vuelto=Double.parseDouble(efect)-Double.parseDouble(total);
        } catch (NumberFormatException e) {
            efect="0.0";
            vuelto=0.0;
        }
       
        String desc=tbboletas.getValueAt(filasele, 3).toString();
        //CajaRegistradora.txtEfect.setText(total);
        DetalleEnEspera.txtbol.setText(numbol);
        DetalleEnEspera.txtcod.setText(codcli);    
        DetalleEnEspera.txttot.setText(total);
        DetalleEnEspera.txtfecha.setText(fecha);
        DetalleEnEspera.txtefect.setText(efect);
        DetalleEnEspera.txtdes.setText(desc);
        DetalleEnEspera.txtvuel.setText(""+Math.rint(vuelto*100)/100);
        DefaultTableModel model = (DefaultTableModel) DetalleEnEspera.tbdetalle.getModel();
        String ver="select a.cod_pro,b.descripcion, cod_talla, cod_color,cantidad,precio,pre_venta,tipoVenta from EsperaDetalleCajaRegistradora a\n" +
        "inner join producto b\n" +
        "on a.cod_pro=b.cod_pro\n" +
        "and a.num_caj like '%"+numbol+"%'";
        String []datos= new String[8]   ;
        try {
                Statement st = cn.createStatement();
                ResultSet rs= st.executeQuery(ver);
                while(rs.next())
                {
                    datos[0]=rs.getString(1);
                    datos[1]=rs.getString(2);
                    datos[2]=rs.getString(3);
                    datos[3]=rs.getString(4);
                    datos[4]=rs.getString(5);
                    datos[5]=rs.getString(6);
                    datos[6]=rs.getString(7);
                    datos[7]=rs.getString(8);
                    model.addRow(datos);                  
                }
                DetalleEnEspera.tbdetalle.setModel(model);
            } catch (SQLException ex) {
                Logger.getLogger(ConsultasEnEspera.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
}//GEN-LAST:event_mnverActionPerformed
private void devolucion(String codPro,String des_talla,String des_color,String cant){
        int suma=SumStock(codPro,des_talla,des_color)+Integer.parseInt(cant);
        String finalsuma=Integer.toString(suma);
            String sql2="select cod_talla from talla WHERE des_talla='"+des_talla+"'";
                    String cod="";
                    try{
                        Statement st3= cn.createStatement();
                        ResultSet rs1 = st3.executeQuery(sql2);
                    if(rs1.next())
                    {              
                        cod=rs1.getString("cod_talla");
                    }  
                    }catch(SQLException ex){
                    }  
                    sql2="select cod_color from color WHERE des_color='"+des_color+"'";
                    String codColor="";
                    try{
                        Statement st3= cn.createStatement();
                        ResultSet rs1 = st3.executeQuery(sql2);
                    if(rs1.next())
                    {              
                        codColor=rs1.getString("cod_color");
                    }  
                    }catch(SQLException ex){
                    }  
            try {           
                String sql3="update talla_producto set Stock='"+finalsuma+"' where cod_pro = '"+codPro+"' and cod_talla = '"+cod+"' and cod_color = '"+codColor+"'";
                PreparedStatement pst2 = cn.prepareStatement(sql3);
                pst2.executeUpdate();
                System.out.println("total= "+finalsuma);            
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            } 
            
            sql2="select sum(CAST(Stock AS INT) ) from talla_producto\n" +
                "where cod_pro='"+codPro+"'";
            String sum="0";
            try{
                Statement st3= cn.createStatement();
                ResultSet rs1 = st3.executeQuery(sql2);
                if(rs1.next())
                    {              
                        sum=rs1.getString(1);
                    }  
            }catch(SQLException ex){
                 JOptionPane.showMessageDialog(null, ex.getMessage());
            } 
            try {           
                String sql3="update producto set Stock='"+sum+"' where cod_pro = '"+codPro+"'";
                PreparedStatement pst2 = cn.prepareStatement(sql3);
                pst2.executeUpdate();
                            
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }  
    }
    int SumStock(String codPro,String destalla,String descolor){
        String suma="0";
        String sqlsuma="select Stock from talla_producto a\n" +
        "inner join talla b on a.cod_talla=b.cod_talla\n" +
        "inner join color c on a.cod_color=c.cod_color\n" +
        "and a.cod_pro='"+codPro+"' and b.des_talla='"+destalla+"' and c.des_color='"+descolor+"'";
        try{
            Statement st3= cn.createStatement();
            ResultSet rs3 = st3.executeQuery(sqlsuma);
            if(rs3.next())
            {              
                suma=rs3.getString("Stock");
                    
            }
        }catch(NumberFormatException | SQLException e){
        }  
        
        return Integer.parseInt(suma);
    }    


private void mneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mneliminarActionPerformed
// TODO add your handling code here:
    int fila=tbboletas.getSelectedRow();
    if(fila>=0)
    {
        String cod=tbboletas.getValueAt(fila, 0).toString();
         String ver="select a.cod_pro,b.descripcion, cod_talla, cod_color,cantidad,precio,pre_venta,tipoVenta from EsperaDetalleCajaRegistradora a\n" +
        "inner join producto b\n" +
        "on a.cod_pro=b.cod_pro\n" +
        "and a.num_caj like '%"+cod+"%'";
        String []datos= new String[8]   ;
        try {
                Statement st = cn.createStatement();
                ResultSet rs= st.executeQuery(ver);
                while(rs.next())
                {
                    datos[0]=rs.getString(1);
                    datos[2]=rs.getString(3);
                    datos[3]=rs.getString(4);
                    datos[4]=rs.getString(5);
                    devolucion(datos[0], datos[2], datos[3], datos[4]);
                } 
            } catch (SQLException ex) {
                Logger.getLogger(ConsultasEnEspera.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                PreparedStatement pst = cn.prepareStatement("DELETE FROM EsperaCajaRegistradora WHERE num_caj='"+cod+"'");
                pst.executeUpdate();
                cargartodasBoletas();
                calcular();
            } catch (SQLException ex) {
                Logger.getLogger(ConsultasEnEspera.class.getName()).log(Level.SEVERE, null, ex);
            }  
            if(TipoPrecio){
                CajaRegistradora.cargarlistaproductosMenor("");
            }else{
                CajaRegistradora.cargarlistaproductosMayor("");
            }
    }
    else
    {
        JOptionPane.showMessageDialog(this, "Seleccione alguna fila");
    }
}//GEN-LAST:event_mneliminarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
   
        String numfact=txtnumero.getText();
        String fecha="";
        Date Fech=jDateChooser1.getDate();
        try {
            SimpleDateFormat formatofecha= new SimpleDateFormat("dd/MM/YYYY");
            fecha =""+formatofecha.format(Fech);
        } catch (Exception e) {
            fecha="";
        }
        String total=txtIngreso.getText();
        String vuelto = txtVuelto.getText();
        String efectivo = txtEfectivo.getText();
        String desc = txtDesc.getText();
        conectar miconexion = new conectar();
        URL archivo = this.getClass().getResource("reportesNotaVenta.jasper");
        JasperReport jr = null;
        try {
            jr= (JasperReport) JRLoader.loadObject(archivo);
            Map parametro = new HashMap();
            parametro.put("numcaj",numfact);
            parametro.put("fecha",fecha);
            parametro.put("total",total);
            parametro.put("efectivo",efectivo);
            parametro.put("vuelto",vuelto);
            parametro.put("desc",desc);
            JasperPrint jp =JasperFillManager.fillReport(jr,parametro, miconexion.conexion());
            JasperPrintManager.printReport(jp, true);
        } catch (JRException e) {
            System.out.printf("ERROR! "+e.getMessage());
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String numfact=txtnumero.getText();
        String fecha="";
        Date Fech=jDateChooser1.getDate();
        try {
            SimpleDateFormat formatofecha= new SimpleDateFormat("dd/MM/YYYY");
            fecha =""+formatofecha.format(Fech);
        } catch (Exception e) {
            fecha="";
        }
        String total=txtIngreso.getText();
        String vuelto = txtVuelto.getText();
        String efectivo = txtEfectivo.getText();
        String desc = txtDesc.getText();
        conectar miconexion = new conectar();
        URL archivo = this.getClass().getResource("reportesNotaVenta.jasper");
        JasperReport jr = null;
        try {
            jr= (JasperReport) JRLoader.loadObject(archivo);
            Map parametro = new HashMap();
            parametro.put("numcaj",numfact);
            parametro.put("fecha",fecha);
            parametro.put("total",total);
            parametro.put("efectivo",efectivo);
            parametro.put("vuelto",vuelto);
            parametro.put("desc",desc);
            JasperPrint jp =JasperFillManager.fillReport(jr,parametro, miconexion.conexion());
            JasperViewer jv = new JasperViewer(jp,false);
            jv.setVisible(true);
            jv.setTitle("Reporte Nota Venta");
        } catch (JRException e) {
            System.out.printf("ERROR! "+e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void mnenviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnenviarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) tbboletas.getModel();
        int filasele= tbboletas.getSelectedRow();
        if(filasele==-1)
        {
            JOptionPane.showMessageDialog(null, "No Seleciono ninguna fila");
        }
        else
        {
        if(!enespera) {
        Double vuelto=0.0;
            //String numbol=tbboletas.getValueAt(filasele, 0).toString();
            String codcli="";
            try {
                codcli=tbboletas.getValueAt(filasele, 7).toString(); 
            } catch (Exception e) {
                codcli="";
            }    
            String total=tbboletas.getValueAt(filasele, 2).toString();
          
            String efect="0.0";
            try {
                efect=tbboletas.getValueAt(filasele, 4).toString();
                vuelto=Double.parseDouble(efect)-Double.parseDouble(total);
                if(vuelto<0.0){
                   vuelto=0.0; 
                }
            } catch (NumberFormatException e) {
                efect="0.0";
                vuelto=0.0;
            }
            String numbol=tbboletas.getValueAt(filasele, 0).toString();
            String desc=tbboletas.getValueAt(filasele, 3).toString();
            //CajaRegistradora.txtEfect.setText(total);
            //DetalleEnEspera.txtbol.setText(numbol);
            codigo=numbol;
            Double subtotal=Double.parseDouble(desc)+Double.parseDouble(total);
            CajaRegistradora.txtClient.setText(codcli);    
            CajaRegistradora.txtTotal.setText(total);
            CajaRegistradora.txtSubTotal.setText(""+Math.rint(subtotal*100)/100);
            CajaRegistradora.txtEfect.setText(efect);
            CajaRegistradora.txtDesc.setText(desc);
            CajaRegistradora.txtVuelto.setText(""+Math.rint(vuelto*100)/100);
            DefaultTableModel model = (DefaultTableModel) CajaRegistradora.tbRegistro.getModel();
            int a =CajaRegistradora.tbRegistro.getRowCount()-1;
                int i;
                for(i=a;i>=0;i--)
                {  
                    model.removeRow(i);
                }
            String ver="select a.cod_pro,b.descripcion, cod_talla, cod_color,precio,cantidad,pre_venta,tipoVenta from EsperaDetalleCajaRegistradora a\n" +
            "inner join producto b\n" +
            "on a.cod_pro=b.cod_pro\n" +
            "and a.num_caj like '%"+numbol+"%'";
            String []datos= new String[8]   ;
            try {
                    Statement st = cn.createStatement();
                    ResultSet rs= st.executeQuery(ver);
                    while(rs.next())
                    {
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=rs.getString(3);
                        datos[3]=rs.getString(4);
                        datos[4]=rs.getString(5);
                        datos[5]=rs.getString(6);
                        datos[6]=rs.getString(7);
                        tipoPrecio[contador]=rs.getString(8);
                        contador=contador+1;
                        model.addRow(datos);                  
                    }
                    CajaRegistradora.tbRegistro.setModel(model);
                   
                    enespera=true;
                } catch (SQLException ex) {
                    Logger.getLogger(ConsultasEnEspera.class.getName()).log(Level.SEVERE, null, ex);
                }
            String eliminarSQL="DELETE FROM EsperaCajaRegistradora WHERE num_caj = '"+ConsultasEnEspera.codigo+"'";
                    try {
                    PreparedStatement pst  = cn.prepareStatement(eliminarSQL);
                    pst.executeUpdate(); 
                    modelo.removeRow(filasele);
                    cargartodasBoletas();
                    calcular();
                    } 
                    catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }
        }else{
            JOptionPane.showMessageDialog(null,"Ya hay uno en cola!");
        }
        }
        System.out.println("Formulario.ConsultasEnEspera.mnenviarActionPerformed()"+ConsultasEnEspera.contador);
    }//GEN-LAST:event_mnenviarActionPerformed
    public static void calcular()
    {
        String total="0.0";
        double Total;
        double SumTot=0.0;
        String efect="0.0";
        double Efect=0.0;
        double SumEfect=0.0;
        
        double Vuelto;
        double SumVue=0.0;
        String desc="0.0";
        double Desc;
        double SumDes=0.0; 
        for(int i=0;i<ConsultasEnEspera.tbboletas.getRowCount();i++)
        {           
            total=ConsultasEnEspera.tbboletas.getValueAt(i, 2).toString();
            Total=Double.parseDouble(total);       
            SumTot=SumTot+Total;
            try {
                efect=ConsultasEnEspera.tbboletas.getValueAt(i, 4).toString();
                Efect=Double.parseDouble(efect);       
                SumEfect=SumEfect+Efect;         
                Vuelto=Efect-Total; 
                SumVue=SumVue+Vuelto;
            } catch (NumberFormatException e) {
                efect="0.0";
                Efect=0.0;       
                SumEfect=0.0;     
                Vuelto=0.0;
                SumVue=0.0;
            }
            
            desc=ConsultasEnEspera.tbboletas.getValueAt(i, 3).toString();
            Desc=Double.parseDouble(desc);       
            SumDes=SumDes+Desc;
            // txtcod.setText(""+Math.rint(c*100)/100)   
        }
        if(SumEfect<0){
            SumEfect=0.0;
        }
        if(SumVue<0){
            SumVue=0.0;
        }
        ConsultasEnEspera.txtIngreso.setText(""+Math.rint(SumTot*100)/100);
        ConsultasEnEspera.txtEfectivo.setText(""+Math.rint(SumEfect*100)/100);
        ConsultasEnEspera. txtVuelto.setText(""+Math.rint(SumVue*100)/100);
        ConsultasEnEspera.txtDesc.setText(""+Math.rint(SumDes*100)/100);
       /* txtsubtotal.setText(Double.toString(subtotal));
        txtigv.setText(""+Math.rint(igv*100)/100);
        txttotal.setText(""+Math.rint(total*100)/100);*/            
    }  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnbuscador;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mneliminar;
    private javax.swing.JMenuItem mnenviar;
    private javax.swing.JMenuItem mnver;
    private javax.swing.JRadioButton rdbbnfecha;
    private javax.swing.JRadioButton rdbnnumero;
    private javax.swing.JRadioButton rdbntodos;
    public static javax.swing.JTable tbboletas;
    public static javax.swing.JTextField txtDesc;
    public static javax.swing.JTextField txtEfectivo;
    public static javax.swing.JTextField txtIngreso;
    public static javax.swing.JTextField txtVuelto;
    private javax.swing.JTextField txtnumero;
    // End of variables declaration//GEN-END:variables
conectar cc= new conectar();
Connection cn = cc.conexion();
}
